{
	"info": {
		"_postman_id": "9ab6b55e-cb8f-423c-9262-6fedd695bcdf",
		"name": "scenario 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "registration_first_USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User registered successfully.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"username1\",\r\n    \"mail\": \"mail1@gmail.com\",\r\n    \"password\": \"password\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/registration",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "registration_second_USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User registered successfully.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"username2\",\r\n    \"mail\": \"mail2@gmail.com\",\r\n    \"password\": \"password2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/registration",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "login_as_Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Sucsess login as ADMIN.\", function(){\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							"\r",
							"pm.test(\"Token created. Type token is Bearer.\", function(){\r",
							"   pm.response.to.be.withBody;\r",
							"   pm.response.to.be.json;\r",
							"   const responseJson = pm.response.json();\r",
							"   pm.expect(responseJson.tokenType).to.eql(\"Bearer\");\r",
							"   pm.expect(responseJson.accessToken).length > 0;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"admin\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "getCurrentUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Sucsess get current user\", function(){\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.withBody;\r",
							"   pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"USERNAME: admin\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.username).to.eql(\"admin\");\r",
							"});\r",
							"\r",
							"pm.test(\"EMAIL: admin@gmail.com\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.mail).to.eql(\"admin@gmail.com\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/current",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"current"
					]
				}
			},
			"response": []
		},
		{
			"name": "addNewUSER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Admin has successfully added a new user with a role USER\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"username3\",\r\n    \"mail\": \"mail3@gmail.com\",\r\n    \"password\": \"password3\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/add/USER",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"add",
						"USER"
					]
				}
			},
			"response": []
		},
		{
			"name": "addNewADMIN",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Admin has successfully added a new user with a role ADMIN\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"admin1\",\r\n    \"mail\": \"admin1@gmail.com\",\r\n    \"password\": \"admin1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/add/ADMIN",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"add",
						"ADMIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Total 6 registered users.\", function(){\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.expect(pm.response.json().length).to.eql(5);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "getUserById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found user id: 51\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.id).to.eql(51);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/find/findById/51",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"find",
						"findById",
						"51"
					]
				}
			},
			"response": []
		},
		{
			"name": "getUserByUsername",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found user USERNAME: username3\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.username).to.eql(\"username3\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/find/findByUsername/username3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"find",
						"findByUsername",
						"username3"
					]
				}
			},
			"response": []
		},
		{
			"name": "getUserByMail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found user MAIL: mail2@gmail.com\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.mail).to.eql(\"mail2@gmail.com\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/find/findByMail/mail2@gmail.com",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"find",
						"findByMail",
						"mail2@gmail.com"
					]
				}
			},
			"response": []
		},
		{
			"name": "blockUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"The admin has blocked the user with id 51.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/51/block",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"51",
						"block"
					]
				}
			},
			"response": []
		},
		{
			"name": "getBlockedUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User with id 51 is blocked.\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.isActive).to.eql(false);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/find/findById/51",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"find",
						"findById",
						"51"
					]
				}
			},
			"response": []
		},
		{
			"name": "unblockUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"The admin has unblocked the user with id 51.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/51/unblock",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"51",
						"unblock"
					]
				}
			},
			"response": []
		},
		{
			"name": "getUnblockedUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User with id 51 is unblocked.\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.isActive).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/find/findById/51",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"find",
						"findById",
						"51"
					]
				}
			},
			"response": []
		},
		{
			"name": "setRole_ADMIN",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Admin changed user with id 51 role to ADMIN.\", function(){\r",
							"    pm.response.to.have.ok;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/51/role/ADMIN",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"51",
						"role",
						"ADMIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Admin has updated the user data with id 51.\", function(){\r",
							"    pm.response.to.be.ok;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"newadmin\",\r\n    \"mail\": \"newadmin@gmail.com\",\r\n    \"password\": \"newadmin\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/51",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"51"
					]
				}
			},
			"response": []
		},
		{
			"name": "getNewAdmin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User with id 51 has role: ADMIN.\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.role).to.eql(\"ADMIN\");\r",
							"});\r",
							"\r",
							"pm.test(\"User with id 51 has username: newadmin.\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.username).to.eql(\"newadmin\");\r",
							"});\r",
							"\r",
							"pm.test(\"User with id 51 has mail: newadmin@gmail.com.\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.mail).to.eql(\"newadmin@gmail.com\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/find/findById/51",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"find",
						"findById",
						"51"
					]
				}
			},
			"response": []
		},
		{
			"name": "removeUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Admin removed user with id 54.\", function(){\r",
							"    pm.response.to.be.ok;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/54",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"54"
					]
				}
			},
			"response": []
		},
		{
			"name": "getRemovedUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User with id 54 not found.\", function(){\r",
							"   pm.response.to.not.be.withBody;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/find/findById/54",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"find",
						"findById",
						"54"
					]
				}
			},
			"response": []
		},
		{
			"name": "restoreUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Admin restored user with id 54.\", function(){\r",
							"    pm.response.to.be.ok;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/54/restore",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"54",
						"restore"
					]
				}
			},
			"response": []
		},
		{
			"name": "getRestoredUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User with id 54 found.\", function(){\r",
							"   pm.response.to.be.withBody;\r",
							"   const responseJson = pm.response.json();\r",
							"   pm.expect(responseJson.id).to.eql(54);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/find/findById/54",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"find",
						"findById",
						"54"
					]
				}
			},
			"response": []
		},
		{
			"name": "getRepoByUserId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Admin got user repo with id 51.\", function(){\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.id).to.eql(52);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/repo/51",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"51"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found 5 repos.\", function(){\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.expect(pm.response.json().length).to.eql(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/repo/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "createFlashcard_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"New flashcard created.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"word\": \"word1\",\r\n    \"translation\": \"translation1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/flashcard",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcard"
					]
				}
			},
			"response": []
		},
		{
			"name": "createFlashcard_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"New flashcard created.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"word\": \"word2\",\r\n    \"translation\": \"translation2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/flashcard",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcard"
					]
				}
			},
			"response": []
		},
		{
			"name": "createFlashcard_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"New flashcard created.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"word\": \"word2\",\r\n    \"translation\": \"translation2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/flashcard",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcard"
					]
				}
			},
			"response": []
		},
		{
			"name": "createFlashcard_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"New flashcard created.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"word\": \"word4\",\r\n    \"translation\": \"translation4\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/flashcard",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcard"
					]
				}
			},
			"response": []
		},
		{
			"name": "createFlashcard_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"New flashcard created.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"word\": \"word5\",\r\n    \"translation\": \"translation5\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/flashcard",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcard"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllFlashcards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found 5 flashcards.\", function(){\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.expect(pm.response.json().length).to.eql(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/flashcard/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcard",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "addFlashcardInRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Flashcard added in repo with user's id 51\", function(){\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 63,\r\n    \"word\": \"word1\",\r\n    \"isRemoved\": false,\r\n    \"translation\": \"translation1\",\r\n    \"flashcardProgresses\": [],\r\n    \"removed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/repo/51/flashcards",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"51",
						"flashcards"
					]
				}
			},
			"response": []
		},
		{
			"name": "addFlashcardInRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Flashcard added in repo with user's id 51\", function(){\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 64,\r\n    \"word\": \"word2\",\r\n    \"isRemoved\": false,\r\n    \"translation\": \"translation2\",\r\n    \"flashcardProgresses\": [],\r\n    \"removed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/repo/51/flashcards",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"51",
						"flashcards"
					]
				}
			},
			"response": []
		},
		{
			"name": "getFlashcardInRepoByUserId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found 2 flashcards in user repo. User id 51.\", function(){\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.expect(pm.response.json().length).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/repo/51/flashcards",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"51",
						"flashcards"
					]
				}
			},
			"response": []
		},
		{
			"name": "removeFlashcardFromRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Flashcard removed from repo with user's id 51\", function(){\r",
							"    pm.response.to.be.ok;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 63,\r\n    \"word\": \"word1\",\r\n    \"isRemoved\": false,\r\n    \"translation\": \"translation1\",\r\n    \"flashcardProgresses\": [],\r\n    \"removed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/repo/51/flashcards",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"51",
						"flashcards"
					]
				}
			},
			"response": []
		},
		{
			"name": "getFlashcardInRepoByUserId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found 1 flashcards in user repo. User id 51.\", function(){\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.expect(pm.response.json().length).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/repo/51/flashcards",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"51",
						"flashcards"
					]
				}
			},
			"response": []
		},
		{
			"name": "removeFlashcard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Flashcard with id 64 is removed.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/flashcard/64",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcard",
						"64"
					]
				}
			},
			"response": []
		},
		{
			"name": "getFlashcardInRepoByUserId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found 0 flashcards in user repo. User id 51.\", function(){\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.expect(pm.response.json().length).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/repo/51/flashcards",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"51",
						"flashcards"
					]
				}
			},
			"response": []
		},
		{
			"name": "restoreFlashcard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Flashcard with id 64 is restored.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/flashcard/64/restore",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcard",
						"64",
						"restore"
					]
				}
			},
			"response": []
		},
		{
			"name": "getFlashcardById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Find flashcard with id: 64\", function(){\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.id).to.eql(64);\r",
							"});\r",
							"\r",
							"pm.test(\"Flashcard with id 103 not removed\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.isRemoved).to.eql(false);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/flashcard/64",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcard",
						"64"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateFlashcard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Flashcard with id 105 is updated.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 67,\r\n    \"word\": \"updateword\",\r\n    \"translation\": \"updatetranslation\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/flashcard/67",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcard",
						"67"
					]
				}
			},
			"response": []
		},
		{
			"name": "getFlashcardById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Find flashcard with id 7. Word is updateword.\", function(){\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.word).to.eql(\"updateword\");\r",
							"});\r",
							"\r",
							"pm.test(\"Find flashcard with id 67. Translation is updatetranslation.\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.translation).to.eql('updatetranslation');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/flashcard/67",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcard",
						"67"
					]
				}
			},
			"response": []
		},
		{
			"name": "getFlashcardByWord",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found 1 flashcards with word 'word1'.\", function(){\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.expect(pm.response.json().length).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/flashcard/find/word1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcard",
						"find",
						"word1"
					]
				}
			},
			"response": []
		},
		{
			"name": "createFlashcardDeck_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"New flashcardDeck created.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"name1\",\r\n    \"description\": \"description1\",\r\n    \"isPublic\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/flashcardDeck",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcardDeck"
					]
				}
			},
			"response": []
		},
		{
			"name": "createFlashcardDeck_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"New flashcardDeck created.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"name2\",\r\n    \"description\": \"description2\",\r\n    \"isPublic\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/flashcardDeck",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcardDeck"
					]
				}
			},
			"response": []
		},
		{
			"name": "createFlashcardDeck_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"New flashcardDeck created.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"name3\",\r\n    \"description\": \"description3\",\r\n    \"isPublic\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/flashcardDeck",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcardDeck"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllFlashcardDecks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found 3 flashcardDecks.\", function(){\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.expect(pm.response.json().length).to.eql(3);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/flashcardDeck/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcardDeck",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "addFlashcardInFlashcardDeck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Flashcard added in FlashcardDeck.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 65,\r\n    \"word\": \"word2\",\r\n    \"isRemoved\": false,\r\n    \"translation\": \"translation2\",\r\n    \"flashcardProgresses\": [],\r\n    \"removed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/flashcardDeck/68/addFlashcard",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcardDeck",
						"68",
						"addFlashcard"
					]
				}
			},
			"response": []
		},
		{
			"name": "addFlashcardInFlashcardDeck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Flashcard added in FlashcardDeck.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 66,\r\n    \"word\": \"word4\",\r\n    \"isRemoved\": false,\r\n    \"translation\": \"translation4\",\r\n    \"flashcardProgresses\": [],\r\n    \"removed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/flashcardDeck/68/addFlashcard",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcardDeck",
						"68",
						"addFlashcard"
					]
				}
			},
			"response": []
		},
		{
			"name": "getFlashcardDeckById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found flashcardDeck with id 68.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.id).to.eql(68);\r",
							"});\r",
							"\r",
							"pm.test(\"FlashcardDeck has 2 flashcards.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    const flashcards = responseJson.flashcards;\r",
							"    pm.expect(flashcards.length).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/flashcardDeck/68",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcardDeck",
						"68"
					]
				}
			},
			"response": []
		},
		{
			"name": "removeFlashcardFromFlashcardDeck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Flashcard removed from FlashcardDeck.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 65,\r\n    \"word\": \"word2\",\r\n    \"isRemoved\": false,\r\n    \"translation\": \"translation2\",\r\n    \"flashcardProgresses\": [],\r\n    \"removed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/flashcardDeck/68/removeFlashcard",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcardDeck",
						"68",
						"removeFlashcard"
					]
				}
			},
			"response": []
		},
		{
			"name": "getFlashcardDeckById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"FlashcardDeck has 1 flashcard.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    const flashcards = responseJson.flashcards;\r",
							"    pm.expect(flashcards.length).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/flashcardDeck/68",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcardDeck",
						"68"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateFlashcardDeck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Flashcard added in FlashcardDeck.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"updatename\",\r\n    \"description\": \"updatedescription\",\r\n    \"isPublic\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/flashcardDeck/68",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcardDeck",
						"68"
					]
				}
			},
			"response": []
		},
		{
			"name": "getFlashcardDeckById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Find flashcard with id 153. Name is updatename.\", function(){\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.name).to.eql(\"updatename\");\r",
							"});\r",
							"\r",
							"pm.test(\"Find flashcard with id 153. Description is updatedescription.\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.description).to.eql('updatedescription');\r",
							"});\r",
							"\r",
							"pm.test(\"Find flashcard with id 153. FlashcardDeck is not public.\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.isPublic).to.eql(false);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/flashcardDeck/68",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcardDeck",
						"68"
					]
				}
			},
			"response": []
		},
		{
			"name": "addFlashcardDeckInRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"FlashcardDeck added in Repo.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 68,\r\n    \"name\": \"updatename\",\r\n    \"description\": \"updatedescription\",\r\n    \"isPublic\": false,\r\n    \"isRemoved\": false,\r\n    \"flashcards\": [\r\n        {\r\n            \"id\": 66,\r\n            \"word\": \"word4\",\r\n            \"isRemoved\": false,\r\n            \"translation\": \"translation4\",\r\n            \"flashcardProgresses\": [],\r\n            \"removed\": false\r\n        }\r\n    ],\r\n    \"public\": false,\r\n    \"removed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/repo/51/flashcardDecks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"51",
						"flashcardDecks"
					]
				}
			},
			"response": []
		},
		{
			"name": "addFlashcardDeckInRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"FlashcardDeck added in Repo.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 69,\r\n    \"name\": \"name2\",\r\n    \"description\": \"description2\",\r\n    \"isPublic\": true,\r\n    \"isRemoved\": false,\r\n    \"flashcards\": [],\r\n    \"public\": true,\r\n    \"removed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/repo/51/flashcardDecks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"51",
						"flashcardDecks"
					]
				}
			},
			"response": []
		},
		{
			"name": "getRepoByUserId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Repo has 2 flashcardDecks.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    const flashcardDecks = responseJson.flashcardDecks;\r",
							"    pm.expect(flashcardDecks.length).to.eql(2);\r",
							"});\r",
							"\r",
							"pm.test(\"Repo has 2 flashcards.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    const flashcards = responseJson.flashcards;\r",
							"    pm.expect(flashcards.length).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/repo/51",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"51"
					]
				}
			},
			"response": []
		},
		{
			"name": "removeFlashcardDeckFromRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"FlashcardDeck removed from Repo.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 68,\r\n    \"name\": \"updatename\",\r\n    \"description\": \"updatedescription\",\r\n    \"isPublic\": false,\r\n    \"isRemoved\": false,\r\n    \"flashcards\": [\r\n        {\r\n            \"id\": 66,\r\n            \"word\": \"word4\",\r\n            \"isRemoved\": false,\r\n            \"translation\": \"translation4\",\r\n            \"flashcardProgresses\": [],\r\n            \"removed\": false\r\n        }\r\n    ],\r\n    \"public\": false,\r\n    \"removed\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/repo/51/flashcardDecks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"51",
						"flashcardDecks"
					]
				}
			},
			"response": []
		},
		{
			"name": "getRepoByUserId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Repo has 1 flashcardDeck.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    const flashcardDecks = responseJson.flashcardDecks;\r",
							"    pm.expect(flashcardDecks.length).to.eql(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Repo has 2 flashcards.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    const flashcards = responseJson.flashcards;\r",
							"    pm.expect(flashcards.length).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/repo/51",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"51"
					]
				}
			},
			"response": []
		},
		{
			"name": "removeFlashcardDeck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"FlashcardDeck removed from Repo.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/flashcardDeck/69",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcardDeck",
						"69"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllFlashcardDecksInRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Repo has 0 flashcardDecks.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/repo/51/flashcardDecks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"51",
						"flashcardDecks"
					]
				}
			},
			"response": []
		},
		{
			"name": "restoreFlashcsrdDeck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"FlashcardDeck is restored.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/flashcardDeck/69/restore",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"flashcardDeck",
						"69",
						"restore"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllFlashcardDecksInRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Repo has 1 flashcardDecks.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/repo/51/flashcardDecks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"repo",
						"51",
						"flashcardDecks"
					]
				}
			},
			"response": []
		},
		{
			"name": "createTag_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"New tag created.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"tagname1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tag",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tag"
					]
				}
			},
			"response": []
		},
		{
			"name": "createTag_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"New tag created.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"tagname2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tag",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tag"
					]
				}
			},
			"response": []
		},
		{
			"name": "createTag_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"New tag created.\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"tagname3\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tag",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tag"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllTags",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found 3 tags.\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.eql(3);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/tag/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tag",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateTag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"New tag created.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"newname\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tag/71",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tag",
						"71"
					]
				}
			},
			"response": []
		},
		{
			"name": "getTagByName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found tag with name 'new name'.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.name).to.eql(\"newname\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/tag/find/newname",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tag",
						"find",
						"newname"
					]
				}
			},
			"response": []
		},
		{
			"name": "addFlashcardToTag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Flashcard added to tag.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/tag/71/flashcard/63",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tag",
						"71",
						"flashcard",
						"63"
					]
				}
			},
			"response": []
		},
		{
			"name": "addFlashcardToTag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Flashcard added to tag.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/tag/71/flashcard/64",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tag",
						"71",
						"flashcard",
						"64"
					]
				}
			},
			"response": []
		},
		{
			"name": "getFlashcardsToTag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"This tag have 2 flashcards.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/tag/71/flashcards",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tag",
						"71",
						"flashcards"
					]
				}
			},
			"response": []
		},
		{
			"name": "removeFlashcardFromTag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Flashcard removed to tag.\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/tag/71/flashcard/63",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tag",
						"71",
						"flashcard",
						"63"
					]
				}
			},
			"response": []
		},
		{
			"name": "getFlashcardsToTag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"This tag have 1 flashcard.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/tag/71/flashcards",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tag",
						"71",
						"flashcards"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllStatistics",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found 5 statistics.\", function(){\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.eql(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/statistics/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"statistics",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "clearStatisticsByUserId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Statistics for user with id 54 is cleared.\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/statistics/54",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"statistics",
						"54"
					]
				}
			},
			"response": []
		},
		{
			"name": "getStatisticByUserId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Found statistic for user with id 54.\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.id).to.eql(56);\r",
							"});\r",
							"\r",
							"pm.test(\"Statistics hasn't achievements.\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.achievements.length).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Statistics hasn't flashcardProgresses.\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.flashcardProgresses.length).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/statistics/54",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"statistics",
						"54"
					]
				}
			},
			"response": []
		},
		{
			"name": "logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"AMIN sucsess logout\", function(){\r",
							"    pm.response.to.be.ok;\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.loggedIn).to.eql(false);\r",
							"    pm.expect(responseJson.success).to.eql(true);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/logout",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"logout"
					]
				}
			},
			"response": []
		}
	]
}